<?php
/**
 * @file
 * Create a Scroll Reveal effect on any tagged element.
 */

/**
 * Implements hook_config_info().
 */
function scrollreveal_config_info() {
  return array(
    'scrollreveal.settings' => array(
      'label' => t('scrollreveal settings'),
      'group' => t('scrollreveal'),
    ),
  );
}

/**
 * Implements hook_library_info().
 */
function scrollreveal_library_info() {
  return array(
    'scrollreveal' => array(
      'title' => 'Scroll Reveal',
      'website' => 'https://scrollrevealjs.org/',
      'version' => '3.4.0',
      'js' => array(
        backdrop_get_path('module', 'scrollreveal') . '/library/dist/scrollreveal.min.js' => array(
          'scope' => 'footer',
          'weight' => 1,
        ),
      ),
    ),
  );
}

/**
 * Implements hook_init().
 */
function scrollreveal_init() {
  $module_path = backdrop_get_path('module', 'scrollreveal');
  $settings = config_get('scrollreveal.settings');

  // Check if the library should be loaded on the current path and theme.
  $path = scrollreveal_check_path($settings['pages']['visibility'], $settings['pages']['pages']);
  $theme = scrollreveal_check_theme($settings['theme']['visibility'], $settings['theme']['themes']);

  if ($path && $theme && isset($settings['triggers_fieldset'])) {
    // Add library files.
    backdrop_add_library('scrollreveal', 'scrollreveal');

    // Prepare JS settings.
    $js_settings = array();
    foreach ($settings['triggers_fieldset'] as $trigger) {
      foreach ($trigger as $key => &$value) {
        // Populate empty values from defaults.
        if ($value == '') {
          $value = $settings['config'][$key];
        }

        // Fix booleans.
        if ($value === 'true') {
          $value = TRUE;
        }
        elseif ($value === 'false') {
          $value = FALSE;
        }

        // Remove values that are still empty in order to use library defaults.
        if ($value == '') {
          unset($trigger[$key]);
        }
      }

      $js_settings[] = $trigger;
    }

    // Add custom JS.
    backdrop_add_js($module_path . '/js/scrollreveal.custom.js', array(
      'scope' => 'footer',
      'weight' => 5,
    ));
    backdrop_add_js(array('scrollreveal' => $js_settings), 'setting');
  }
}

/**
 * Check if the library should be loaded on the current page.
 *
 * @see https://api.backdropcms.org/api/backdrop/core%21modules%21layout%21plugins%21access%21path_layout_access.inc/function/PathLayoutAccess%3A%3AcheckAccess/1
 */
function scrollreveal_check_path($visibility, $pages) {
  $base_path = $_GET['q'];
  $path = backdrop_get_path_alias($base_path);
  $page_match = backdrop_match_path($path, $pages);

  if ($path !== $base_path) {
    $page_match = $page_match || backdrop_match_path($base_path, $pages);
  }

  if (!$visibility) {
    $page_match = !$page_match;
  }

  return $page_match;
}

/**
 * Check if the library should be loaded in the current theme.
 */
function scrollreveal_check_theme($visibility, $themes) {
  global $theme;
  $theme_match = in_array($theme, $themes);

  // @see scrollreveal_check_path().
  if (!$visibility) {
    $theme_match = !$theme_match;
  }

  return $theme_match;
}

/**
 * Implements hook_menu().
 */
function scrollreveal_menu() {
  // Admin settings form.
  return array(
    'admin/config/user-interface/scrollreveal' => array(
      'title' => 'Scroll Reveal',
      'description' => 'Add Scroll Reveal effect to any tagged element.',
      'page callback' => 'backdrop_get_form',
      'page arguments' => array('scrollreveal_admin'),
      'access arguments' => array('administer site configuration'),
      'file' => 'scrollreveal.admin.inc',
    ),
  );
}

